
emv.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cd0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000cd0  00000d44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000d58  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000db4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  00000df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000017c8  00000000  00000000  00000ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000961  00000000  00000000  000026c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000abc  00000000  00000000  00003021  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f0  00000000  00000000  00003ae0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004d0  00000000  00000000  00003cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000fa5  00000000  00000000  000041a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  00005145  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ed       	ldi	r30, 0xD0	; 208
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 44 02 	call	0x488	; 0x488 <main>
  7a:	0c 94 66 06 	jmp	0xccc	; 0xccc <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <BUTTON_inti>:
 *  Author: dell
 */ 
#include "dio.h"
void BUTTON_inti(char port ,char pin)
{
	DIO_setpindir(port,pin,0);
  82:	40 e0       	ldi	r20, 0x00	; 0
  84:	0e 94 48 00 	call	0x90	; 0x90 <DIO_setpindir>
  88:	08 95       	ret

0000008a <BUTTON_read>:
}
char BUTTON_read(char port ,char pin)
{
	return DIO_readpin(port,pin);
  8a:	0e 94 28 01 	call	0x250	; 0x250 <DIO_readpin>
	
}
  8e:	08 95       	ret

00000090 <DIO_setpindir>:
		break ;
		default:
		break ;
	}
	return value;
}
  90:	82 34       	cpi	r24, 0x42	; 66
  92:	19 f1       	breq	.+70     	; 0xda <DIO_setpindir+0x4a>
  94:	18 f4       	brcc	.+6      	; 0x9c <DIO_setpindir+0xc>
  96:	81 34       	cpi	r24, 0x41	; 65
  98:	39 f0       	breq	.+14     	; 0xa8 <DIO_setpindir+0x18>
  9a:	08 95       	ret
  9c:	83 34       	cpi	r24, 0x43	; 67
  9e:	b1 f1       	breq	.+108    	; 0x10c <DIO_setpindir+0x7c>
  a0:	84 34       	cpi	r24, 0x44	; 68
  a2:	09 f4       	brne	.+2      	; 0xa6 <DIO_setpindir+0x16>
  a4:	4c c0       	rjmp	.+152    	; 0x13e <DIO_setpindir+0xae>
  a6:	08 95       	ret
  a8:	41 30       	cpi	r20, 0x01	; 1
  aa:	59 f4       	brne	.+22     	; 0xc2 <DIO_setpindir+0x32>
  ac:	2a b3       	in	r18, 0x1a	; 26
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <DIO_setpindir+0x28>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <DIO_setpindir+0x24>
  bc:	82 2b       	or	r24, r18
  be:	8a bb       	out	0x1a, r24	; 26
  c0:	08 95       	ret
  c2:	2a b3       	in	r18, 0x1a	; 26
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_setpindir+0x3e>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_setpindir+0x3a>
  d2:	80 95       	com	r24
  d4:	82 23       	and	r24, r18
  d6:	8a bb       	out	0x1a, r24	; 26
  d8:	08 95       	ret
  da:	41 30       	cpi	r20, 0x01	; 1
  dc:	59 f4       	brne	.+22     	; 0xf4 <DIO_setpindir+0x64>
  de:	27 b3       	in	r18, 0x17	; 23
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_setpindir+0x5a>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_setpindir+0x56>
  ee:	82 2b       	or	r24, r18
  f0:	87 bb       	out	0x17, r24	; 23
  f2:	08 95       	ret
  f4:	27 b3       	in	r18, 0x17	; 23
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	02 c0       	rjmp	.+4      	; 0x100 <DIO_setpindir+0x70>
  fc:	88 0f       	add	r24, r24
  fe:	99 1f       	adc	r25, r25
 100:	6a 95       	dec	r22
 102:	e2 f7       	brpl	.-8      	; 0xfc <DIO_setpindir+0x6c>
 104:	80 95       	com	r24
 106:	82 23       	and	r24, r18
 108:	87 bb       	out	0x17, r24	; 23
 10a:	08 95       	ret
 10c:	41 30       	cpi	r20, 0x01	; 1
 10e:	59 f4       	brne	.+22     	; 0x126 <DIO_setpindir+0x96>
 110:	24 b3       	in	r18, 0x14	; 20
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_setpindir+0x8c>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	6a 95       	dec	r22
 11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_setpindir+0x88>
 120:	82 2b       	or	r24, r18
 122:	84 bb       	out	0x14, r24	; 20
 124:	08 95       	ret
 126:	24 b3       	in	r18, 0x14	; 20
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	02 c0       	rjmp	.+4      	; 0x132 <DIO_setpindir+0xa2>
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	6a 95       	dec	r22
 134:	e2 f7       	brpl	.-8      	; 0x12e <DIO_setpindir+0x9e>
 136:	80 95       	com	r24
 138:	82 23       	and	r24, r18
 13a:	84 bb       	out	0x14, r24	; 20
 13c:	08 95       	ret
 13e:	41 30       	cpi	r20, 0x01	; 1
 140:	59 f4       	brne	.+22     	; 0x158 <DIO_setpindir+0xc8>
 142:	21 b3       	in	r18, 0x11	; 17
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	02 c0       	rjmp	.+4      	; 0x14e <DIO_setpindir+0xbe>
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	6a 95       	dec	r22
 150:	e2 f7       	brpl	.-8      	; 0x14a <DIO_setpindir+0xba>
 152:	82 2b       	or	r24, r18
 154:	81 bb       	out	0x11, r24	; 17
 156:	08 95       	ret
 158:	21 b3       	in	r18, 0x11	; 17
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	02 c0       	rjmp	.+4      	; 0x164 <DIO_setpindir+0xd4>
 160:	88 0f       	add	r24, r24
 162:	99 1f       	adc	r25, r25
 164:	6a 95       	dec	r22
 166:	e2 f7       	brpl	.-8      	; 0x160 <DIO_setpindir+0xd0>
 168:	80 95       	com	r24
 16a:	82 23       	and	r24, r18
 16c:	81 bb       	out	0x11, r24	; 17
 16e:	08 95       	ret

00000170 <DIO_writepin>:
 170:	82 34       	cpi	r24, 0x42	; 66
 172:	19 f1       	breq	.+70     	; 0x1ba <DIO_writepin+0x4a>
 174:	18 f4       	brcc	.+6      	; 0x17c <DIO_writepin+0xc>
 176:	81 34       	cpi	r24, 0x41	; 65
 178:	39 f0       	breq	.+14     	; 0x188 <DIO_writepin+0x18>
 17a:	08 95       	ret
 17c:	83 34       	cpi	r24, 0x43	; 67
 17e:	b1 f1       	breq	.+108    	; 0x1ec <DIO_writepin+0x7c>
 180:	84 34       	cpi	r24, 0x44	; 68
 182:	09 f4       	brne	.+2      	; 0x186 <DIO_writepin+0x16>
 184:	4c c0       	rjmp	.+152    	; 0x21e <DIO_writepin+0xae>
 186:	08 95       	ret
 188:	41 30       	cpi	r20, 0x01	; 1
 18a:	59 f4       	brne	.+22     	; 0x1a2 <DIO_writepin+0x32>
 18c:	2b b3       	in	r18, 0x1b	; 27
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <DIO_writepin+0x28>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <DIO_writepin+0x24>
 19c:	82 2b       	or	r24, r18
 19e:	8b bb       	out	0x1b, r24	; 27
 1a0:	08 95       	ret
 1a2:	2b b3       	in	r18, 0x1b	; 27
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_writepin+0x3e>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_writepin+0x3a>
 1b2:	80 95       	com	r24
 1b4:	82 23       	and	r24, r18
 1b6:	8b bb       	out	0x1b, r24	; 27
 1b8:	08 95       	ret
 1ba:	41 30       	cpi	r20, 0x01	; 1
 1bc:	59 f4       	brne	.+22     	; 0x1d4 <DIO_writepin+0x64>
 1be:	28 b3       	in	r18, 0x18	; 24
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <DIO_writepin+0x5a>
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	6a 95       	dec	r22
 1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <DIO_writepin+0x56>
 1ce:	82 2b       	or	r24, r18
 1d0:	88 bb       	out	0x18, r24	; 24
 1d2:	08 95       	ret
 1d4:	28 b3       	in	r18, 0x18	; 24
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_writepin+0x70>
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	6a 95       	dec	r22
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_writepin+0x6c>
 1e4:	80 95       	com	r24
 1e6:	82 23       	and	r24, r18
 1e8:	88 bb       	out	0x18, r24	; 24
 1ea:	08 95       	ret
 1ec:	41 30       	cpi	r20, 0x01	; 1
 1ee:	59 f4       	brne	.+22     	; 0x206 <DIO_writepin+0x96>
 1f0:	25 b3       	in	r18, 0x15	; 21
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <DIO_writepin+0x8c>
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	6a 95       	dec	r22
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <DIO_writepin+0x88>
 200:	82 2b       	or	r24, r18
 202:	85 bb       	out	0x15, r24	; 21
 204:	08 95       	ret
 206:	25 b3       	in	r18, 0x15	; 21
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_writepin+0xa2>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	6a 95       	dec	r22
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_writepin+0x9e>
 216:	80 95       	com	r24
 218:	82 23       	and	r24, r18
 21a:	85 bb       	out	0x15, r24	; 21
 21c:	08 95       	ret
 21e:	41 30       	cpi	r20, 0x01	; 1
 220:	59 f4       	brne	.+22     	; 0x238 <DIO_writepin+0xc8>
 222:	22 b3       	in	r18, 0x12	; 18
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_writepin+0xbe>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	6a 95       	dec	r22
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_writepin+0xba>
 232:	82 2b       	or	r24, r18
 234:	82 bb       	out	0x12, r24	; 18
 236:	08 95       	ret
 238:	22 b3       	in	r18, 0x12	; 18
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	02 c0       	rjmp	.+4      	; 0x244 <DIO_writepin+0xd4>
 240:	88 0f       	add	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	6a 95       	dec	r22
 246:	e2 f7       	brpl	.-8      	; 0x240 <DIO_writepin+0xd0>
 248:	80 95       	com	r24
 24a:	82 23       	and	r24, r18
 24c:	82 bb       	out	0x12, r24	; 18
 24e:	08 95       	ret

00000250 <DIO_readpin>:
 250:	82 34       	cpi	r24, 0x42	; 66
 252:	d9 f0       	breq	.+54     	; 0x28a <DIO_readpin+0x3a>
 254:	18 f4       	brcc	.+6      	; 0x25c <DIO_readpin+0xc>
 256:	81 34       	cpi	r24, 0x41	; 65
 258:	31 f0       	breq	.+12     	; 0x266 <DIO_readpin+0x16>
 25a:	4d c0       	rjmp	.+154    	; 0x2f6 <DIO_readpin+0xa6>
 25c:	83 34       	cpi	r24, 0x43	; 67
 25e:	39 f1       	breq	.+78     	; 0x2ae <DIO_readpin+0x5e>
 260:	84 34       	cpi	r24, 0x44	; 68
 262:	b9 f1       	breq	.+110    	; 0x2d2 <DIO_readpin+0x82>
 264:	48 c0       	rjmp	.+144    	; 0x2f6 <DIO_readpin+0xa6>
 266:	29 b3       	in	r18, 0x19	; 25
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	06 2e       	mov	r0, r22
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_readpin+0x24>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	0a 94       	dec	r0
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_readpin+0x20>
 278:	30 e0       	ldi	r19, 0x00	; 0
 27a:	82 23       	and	r24, r18
 27c:	93 23       	and	r25, r19
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_readpin+0x34>
 280:	95 95       	asr	r25
 282:	87 95       	ror	r24
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_readpin+0x30>
 288:	08 95       	ret
 28a:	26 b3       	in	r18, 0x16	; 22
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	06 2e       	mov	r0, r22
 292:	02 c0       	rjmp	.+4      	; 0x298 <DIO_readpin+0x48>
 294:	88 0f       	add	r24, r24
 296:	99 1f       	adc	r25, r25
 298:	0a 94       	dec	r0
 29a:	e2 f7       	brpl	.-8      	; 0x294 <DIO_readpin+0x44>
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	82 23       	and	r24, r18
 2a0:	93 23       	and	r25, r19
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <DIO_readpin+0x58>
 2a4:	95 95       	asr	r25
 2a6:	87 95       	ror	r24
 2a8:	6a 95       	dec	r22
 2aa:	e2 f7       	brpl	.-8      	; 0x2a4 <DIO_readpin+0x54>
 2ac:	08 95       	ret
 2ae:	23 b3       	in	r18, 0x13	; 19
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	06 2e       	mov	r0, r22
 2b6:	02 c0       	rjmp	.+4      	; 0x2bc <DIO_readpin+0x6c>
 2b8:	88 0f       	add	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	0a 94       	dec	r0
 2be:	e2 f7       	brpl	.-8      	; 0x2b8 <DIO_readpin+0x68>
 2c0:	30 e0       	ldi	r19, 0x00	; 0
 2c2:	82 23       	and	r24, r18
 2c4:	93 23       	and	r25, r19
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_readpin+0x7c>
 2c8:	95 95       	asr	r25
 2ca:	87 95       	ror	r24
 2cc:	6a 95       	dec	r22
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_readpin+0x78>
 2d0:	08 95       	ret
 2d2:	20 b3       	in	r18, 0x10	; 16
 2d4:	81 e0       	ldi	r24, 0x01	; 1
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	06 2e       	mov	r0, r22
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <DIO_readpin+0x90>
 2dc:	88 0f       	add	r24, r24
 2de:	99 1f       	adc	r25, r25
 2e0:	0a 94       	dec	r0
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <DIO_readpin+0x8c>
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	82 23       	and	r24, r18
 2e8:	93 23       	and	r25, r19
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <DIO_readpin+0xa0>
 2ec:	95 95       	asr	r25
 2ee:	87 95       	ror	r24
 2f0:	6a 95       	dec	r22
 2f2:	e2 f7       	brpl	.-8      	; 0x2ec <DIO_readpin+0x9c>
 2f4:	08 95       	ret
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	08 95       	ret

000002fa <DIO_set_port_direction>:
 2fa:	82 34       	cpi	r24, 0x42	; 66
 2fc:	59 f0       	breq	.+22     	; 0x314 <DIO_set_port_direction+0x1a>
 2fe:	18 f4       	brcc	.+6      	; 0x306 <DIO_set_port_direction+0xc>
 300:	81 34       	cpi	r24, 0x41	; 65
 302:	31 f0       	breq	.+12     	; 0x310 <DIO_set_port_direction+0x16>
 304:	08 95       	ret
 306:	83 34       	cpi	r24, 0x43	; 67
 308:	39 f0       	breq	.+14     	; 0x318 <DIO_set_port_direction+0x1e>
 30a:	84 34       	cpi	r24, 0x44	; 68
 30c:	39 f0       	breq	.+14     	; 0x31c <DIO_set_port_direction+0x22>
 30e:	08 95       	ret
 310:	6a bb       	out	0x1a, r22	; 26
 312:	08 95       	ret
 314:	67 bb       	out	0x17, r22	; 23
 316:	08 95       	ret
 318:	64 bb       	out	0x14, r22	; 20
 31a:	08 95       	ret
 31c:	61 bb       	out	0x11, r22	; 17
 31e:	08 95       	ret

00000320 <DIO_write_port>:
void DIO_write_port( char portname,unsigned char value)
{
	switch(portname)
 320:	82 34       	cpi	r24, 0x42	; 66
 322:	59 f0       	breq	.+22     	; 0x33a <DIO_write_port+0x1a>
 324:	18 f4       	brcc	.+6      	; 0x32c <DIO_write_port+0xc>
 326:	81 34       	cpi	r24, 0x41	; 65
 328:	31 f0       	breq	.+12     	; 0x336 <DIO_write_port+0x16>
 32a:	08 95       	ret
 32c:	83 34       	cpi	r24, 0x43	; 67
 32e:	39 f0       	breq	.+14     	; 0x33e <DIO_write_port+0x1e>
 330:	84 34       	cpi	r24, 0x44	; 68
 332:	39 f0       	breq	.+14     	; 0x342 <DIO_write_port+0x22>
 334:	08 95       	ret
	{
		case 'A' :
			PORTA=value;
 336:	6b bb       	out	0x1b, r22	; 27
		break ;
 338:	08 95       	ret
		case 'B':
			PORTB=value;
 33a:	68 bb       	out	0x18, r22	; 24
		break ;
 33c:	08 95       	ret
		case 'C' :
			PORTC=value;
 33e:	65 bb       	out	0x15, r22	; 21
		break ;
 340:	08 95       	ret
		case 'D':
			PORTD=value;
 342:	62 bb       	out	0x12, r22	; 18
 344:	08 95       	ret

00000346 <send_falling_edge>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 346:	41 e0       	ldi	r20, 0x01	; 1
 348:	60 e0       	ldi	r22, 0x00	; 0
 34a:	82 e4       	ldi	r24, 0x42	; 66
 34c:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_writepin>
 350:	8f e9       	ldi	r24, 0x9F	; 159
 352:	9f e0       	ldi	r25, 0x0F	; 15
 354:	01 97       	sbiw	r24, 0x01	; 1
 356:	f1 f7       	brne	.-4      	; 0x354 <send_falling_edge+0xe>
 358:	00 c0       	rjmp	.+0      	; 0x35a <send_falling_edge+0x14>
 35a:	00 00       	nop
 35c:	40 e0       	ldi	r20, 0x00	; 0
 35e:	60 e0       	ldi	r22, 0x00	; 0
 360:	82 e4       	ldi	r24, 0x42	; 66
 362:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_writepin>
 366:	8f e9       	ldi	r24, 0x9F	; 159
 368:	9f e0       	ldi	r25, 0x0F	; 15
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <send_falling_edge+0x24>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <send_falling_edge+0x2a>
 370:	00 00       	nop
 372:	08 95       	ret

00000374 <LCD_send_cmd>:
 374:	0e 94 90 01 	call	0x320	; 0x320 <DIO_write_port>
 378:	40 e0       	ldi	r20, 0x00	; 0
 37a:	61 e0       	ldi	r22, 0x01	; 1
 37c:	82 e4       	ldi	r24, 0x42	; 66
 37e:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_writepin>
 382:	0e 94 a3 01 	call	0x346	; 0x346 <send_falling_edge>
 386:	8f ec       	ldi	r24, 0xCF	; 207
 388:	97 e0       	ldi	r25, 0x07	; 7
 38a:	01 97       	sbiw	r24, 0x01	; 1
 38c:	f1 f7       	brne	.-4      	; 0x38a <LCD_send_cmd+0x16>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <LCD_send_cmd+0x1c>
 390:	00 00       	nop
 392:	08 95       	ret

00000394 <LCD_inti>:
 394:	1f 93       	push	r17
 396:	cf 93       	push	r28
 398:	df 93       	push	r29
 39a:	c8 2f       	mov	r28, r24
 39c:	16 2f       	mov	r17, r22
 39e:	d4 2f       	mov	r29, r20
 3a0:	2f ef       	ldi	r18, 0xFF	; 255
 3a2:	81 ee       	ldi	r24, 0xE1	; 225
 3a4:	94 e0       	ldi	r25, 0x04	; 4
 3a6:	21 50       	subi	r18, 0x01	; 1
 3a8:	80 40       	sbci	r24, 0x00	; 0
 3aa:	90 40       	sbci	r25, 0x00	; 0
 3ac:	e1 f7       	brne	.-8      	; 0x3a6 <LCD_inti+0x12>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <LCD_inti+0x1c>
 3b0:	00 00       	nop
 3b2:	6f ef       	ldi	r22, 0xFF	; 255
 3b4:	8c 2f       	mov	r24, r28
 3b6:	0e 94 7d 01 	call	0x2fa	; 0x2fa <DIO_set_port_direction>
 3ba:	41 e0       	ldi	r20, 0x01	; 1
 3bc:	6d 2f       	mov	r22, r29
 3be:	81 2f       	mov	r24, r17
 3c0:	0e 94 48 00 	call	0x90	; 0x90 <DIO_setpindir>
 3c4:	61 e0       	ldi	r22, 0x01	; 1
 3c6:	6d 0f       	add	r22, r29
 3c8:	41 e0       	ldi	r20, 0x01	; 1
 3ca:	81 2f       	mov	r24, r17
 3cc:	0e 94 48 00 	call	0x90	; 0x90 <DIO_setpindir>
 3d0:	62 e0       	ldi	r22, 0x02	; 2
 3d2:	6d 0f       	add	r22, r29
 3d4:	41 e0       	ldi	r20, 0x01	; 1
 3d6:	81 2f       	mov	r24, r17
 3d8:	0e 94 48 00 	call	0x90	; 0x90 <DIO_setpindir>
 3dc:	68 e3       	ldi	r22, 0x38	; 56
 3de:	8c 2f       	mov	r24, r28
 3e0:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_send_cmd>
 3e4:	61 e0       	ldi	r22, 0x01	; 1
 3e6:	8c 2f       	mov	r24, r28
 3e8:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_send_cmd>
 3ec:	8f e1       	ldi	r24, 0x1F	; 31
 3ee:	9e e4       	ldi	r25, 0x4E	; 78
 3f0:	01 97       	sbiw	r24, 0x01	; 1
 3f2:	f1 f7       	brne	.-4      	; 0x3f0 <LCD_inti+0x5c>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <LCD_inti+0x62>
 3f6:	00 00       	nop
 3f8:	6e e0       	ldi	r22, 0x0E	; 14
 3fa:	8c 2f       	mov	r24, r28
 3fc:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_send_cmd>
 400:	66 e0       	ldi	r22, 0x06	; 6
 402:	8c 2f       	mov	r24, r28
 404:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_send_cmd>
 408:	df 91       	pop	r29
 40a:	cf 91       	pop	r28
 40c:	1f 91       	pop	r17
 40e:	08 95       	ret

00000410 <LCD_send_char>:
 410:	0e 94 90 01 	call	0x320	; 0x320 <DIO_write_port>
 414:	41 e0       	ldi	r20, 0x01	; 1
 416:	61 e0       	ldi	r22, 0x01	; 1
 418:	82 e4       	ldi	r24, 0x42	; 66
 41a:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_writepin>
 41e:	0e 94 a3 01 	call	0x346	; 0x346 <send_falling_edge>
 422:	8f ec       	ldi	r24, 0xCF	; 207
 424:	97 e0       	ldi	r25, 0x07	; 7
 426:	01 97       	sbiw	r24, 0x01	; 1
 428:	f1 f7       	brne	.-4      	; 0x426 <LCD_send_char+0x16>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <LCD_send_char+0x1c>
 42c:	00 00       	nop
 42e:	08 95       	ret

00000430 <LCD_send_string>:
 430:	1f 93       	push	r17
 432:	cf 93       	push	r28
 434:	df 93       	push	r29
 436:	eb 01       	movw	r28, r22
 438:	68 81       	ld	r22, Y
 43a:	66 23       	and	r22, r22
 43c:	41 f0       	breq	.+16     	; 0x44e <LCD_send_string+0x1e>
 43e:	18 2f       	mov	r17, r24
 440:	21 96       	adiw	r28, 0x01	; 1
 442:	81 2f       	mov	r24, r17
 444:	0e 94 08 02 	call	0x410	; 0x410 <LCD_send_char>
 448:	69 91       	ld	r22, Y+
 44a:	61 11       	cpse	r22, r1
 44c:	fa cf       	rjmp	.-12     	; 0x442 <LCD_send_string+0x12>
 44e:	df 91       	pop	r29
 450:	cf 91       	pop	r28
 452:	1f 91       	pop	r17
 454:	08 95       	ret

00000456 <LCD_movecursor>:
	_delay_ms(10);
}
void LCD_movecursor(char port,char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
 456:	9f ef       	ldi	r25, 0xFF	; 255
 458:	96 0f       	add	r25, r22
 45a:	92 30       	cpi	r25, 0x02	; 2
 45c:	70 f4       	brcc	.+28     	; 0x47a <LCD_movecursor+0x24>
 45e:	9f ef       	ldi	r25, 0xFF	; 255
 460:	94 0f       	add	r25, r20
 462:	90 31       	cpi	r25, 0x10	; 16
 464:	60 f4       	brcc	.+24     	; 0x47e <LCD_movecursor+0x28>
	{
		data=0x80;
	}
	else if(row==1)
 466:	61 30       	cpi	r22, 0x01	; 1
 468:	19 f4       	brne	.+6      	; 0x470 <LCD_movecursor+0x1a>
	{
		data=0x80+coloumn-1 ;
 46a:	2f e7       	ldi	r18, 0x7F	; 127
 46c:	24 0f       	add	r18, r20
 46e:	08 c0       	rjmp	.+16     	; 0x480 <LCD_movecursor+0x2a>
	}
	else if (row==2)
 470:	62 30       	cpi	r22, 0x02	; 2
 472:	31 f4       	brne	.+12     	; 0x480 <LCD_movecursor+0x2a>
	{
		data=0xc0+coloumn-1;
 474:	2f eb       	ldi	r18, 0xBF	; 191
 476:	24 0f       	add	r18, r20
 478:	03 c0       	rjmp	.+6      	; 0x480 <LCD_movecursor+0x2a>
void LCD_movecursor(char port,char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
	{
		data=0x80;
 47a:	20 e8       	ldi	r18, 0x80	; 128
 47c:	01 c0       	rjmp	.+2      	; 0x480 <LCD_movecursor+0x2a>
 47e:	20 e8       	ldi	r18, 0x80	; 128
	}
	else if (row==2)
	{
		data=0xc0+coloumn-1;
	}
	LCD_send_cmd(port,data);
 480:	62 2f       	mov	r22, r18
 482:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_send_cmd>
 486:	08 95       	ret

00000488 <main>:
#define F_CPU 8000000UL
#include <util/delay.h>
#include "button.h"
#include "LCD.h"
int main(void)
{
 488:	cf 93       	push	r28
 48a:	df 93       	push	r29
 48c:	cd b7       	in	r28, 0x3d	; 61
 48e:	de b7       	in	r29, 0x3e	; 62
 490:	2a 97       	sbiw	r28, 0x0a	; 10
 492:	0f b6       	in	r0, 0x3f	; 63
 494:	f8 94       	cli
 496:	de bf       	out	0x3e, r29	; 62
 498:	0f be       	out	0x3f, r0	; 63
 49a:	cd bf       	out	0x3d, r28	; 61
   LCD_inti('A','B',0);
 49c:	40 e0       	ldi	r20, 0x00	; 0
 49e:	50 e0       	ldi	r21, 0x00	; 0
 4a0:	62 e4       	ldi	r22, 0x42	; 66
 4a2:	81 e4       	ldi	r24, 0x41	; 65
 4a4:	0e 94 ca 01 	call	0x394	; 0x394 <LCD_inti>
   BUTTON_inti('B',3);
 4a8:	63 e0       	ldi	r22, 0x03	; 3
 4aa:	82 e4       	ldi	r24, 0x42	; 66
 4ac:	0e 94 41 00 	call	0x82	; 0x82 <BUTTON_inti>
   BUTTON_inti('B',4);
 4b0:	64 e0       	ldi	r22, 0x04	; 4
 4b2:	82 e4       	ldi	r24, 0x42	; 66
 4b4:	0e 94 41 00 	call	0x82	; 0x82 <BUTTON_inti>
   BUTTON_inti('B',5);
 4b8:	65 e0       	ldi	r22, 0x05	; 5
 4ba:	82 e4       	ldi	r24, 0x42	; 66
 4bc:	0e 94 41 00 	call	0x82	; 0x82 <BUTTON_inti>
   BUTTON_inti('B',6);
 4c0:	66 e0       	ldi	r22, 0x06	; 6
 4c2:	82 e4       	ldi	r24, 0x42	; 66
 4c4:	0e 94 41 00 	call	0x82	; 0x82 <BUTTON_inti>
   BUTTON_inti('B',7);
 4c8:	67 e0       	ldi	r22, 0x07	; 7
 4ca:	82 e4       	ldi	r24, 0x42	; 66
 4cc:	0e 94 41 00 	call	0x82	; 0x82 <BUTTON_inti>
   LCD_send_string('A',"A=0");
 4d0:	60 e6       	ldi	r22, 0x60	; 96
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	81 e4       	ldi	r24, 0x41	; 65
 4d6:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
   LCD_movecursor('A',1,9);
 4da:	49 e0       	ldi	r20, 0x09	; 9
 4dc:	61 e0       	ldi	r22, 0x01	; 1
 4de:	81 e4       	ldi	r24, 0x41	; 65
 4e0:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
   LCD_send_string('A',"B=0");
 4e4:	64 e6       	ldi	r22, 0x64	; 100
 4e6:	70 e0       	ldi	r23, 0x00	; 0
 4e8:	81 e4       	ldi	r24, 0x41	; 65
 4ea:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
   LCD_movecursor('A',2,1);
 4ee:	41 e0       	ldi	r20, 0x01	; 1
 4f0:	62 e0       	ldi	r22, 0x02	; 2
 4f2:	81 e4       	ldi	r24, 0x41	; 65
 4f4:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
   LCD_send_string('A',"C=0");
 4f8:	68 e6       	ldi	r22, 0x68	; 104
 4fa:	70 e0       	ldi	r23, 0x00	; 0
 4fc:	81 e4       	ldi	r24, 0x41	; 65
 4fe:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
   LCD_movecursor('A',2,9);
 502:	49 e0       	ldi	r20, 0x09	; 9
 504:	62 e0       	ldi	r22, 0x02	; 2
 506:	81 e4       	ldi	r24, 0x41	; 65
 508:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
   LCD_send_string('A',"D=0");
 50c:	6c e6       	ldi	r22, 0x6C	; 108
 50e:	70 e0       	ldi	r23, 0x00	; 0
 510:	81 e4       	ldi	r24, 0x41	; 65
 512:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
   int a=0,b=0,c=0,d=0;
 516:	61 2c       	mov	r6, r1
 518:	71 2c       	mov	r7, r1
 51a:	81 2c       	mov	r8, r1
 51c:	91 2c       	mov	r9, r1
 51e:	a1 2c       	mov	r10, r1
 520:	b1 2c       	mov	r11, r1
 522:	c1 2c       	mov	r12, r1
 524:	d1 2c       	mov	r13, r1
		}
		else if (BUTTON_read('B',6)==1&&d<999999)
		{
			d++;
			char ar[10];
			sprintf(ar,"%d",d);
 526:	0f 2e       	mov	r0, r31
 528:	f0 e7       	ldi	r31, 0x70	; 112
 52a:	ef 2e       	mov	r14, r31
 52c:	f0 e0       	ldi	r31, 0x00	; 0
 52e:	ff 2e       	mov	r15, r31
 530:	f0 2d       	mov	r31, r0
 532:	8e 01       	movw	r16, r28
 534:	0f 5f       	subi	r16, 0xFF	; 255
 536:	1f 4f       	sbci	r17, 0xFF	; 255
   LCD_send_string('A',"D=0");
   int a=0,b=0,c=0,d=0;
    /* Replace with your application code */
    while (1) 
    {
		if (BUTTON_read('B',3)==1&&a<999999)
 538:	63 e0       	ldi	r22, 0x03	; 3
 53a:	82 e4       	ldi	r24, 0x42	; 66
 53c:	0e 94 45 00 	call	0x8a	; 0x8a <BUTTON_read>
 540:	81 30       	cpi	r24, 0x01	; 1
 542:	21 f5       	brne	.+72     	; 0x58c <main+0x104>
		{
		a++;
 544:	2f ef       	ldi	r18, 0xFF	; 255
 546:	c2 1a       	sub	r12, r18
 548:	d2 0a       	sbc	r13, r18
		char ar[10];
		sprintf(ar,"%d",a);
 54a:	df 92       	push	r13
 54c:	cf 92       	push	r12
 54e:	ff 92       	push	r15
 550:	ef 92       	push	r14
 552:	1f 93       	push	r17
 554:	0f 93       	push	r16
 556:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <sprintf>
		LCD_movecursor('A',1,3);
 55a:	43 e0       	ldi	r20, 0x03	; 3
 55c:	61 e0       	ldi	r22, 0x01	; 1
 55e:	81 e4       	ldi	r24, 0x41	; 65
 560:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
		LCD_send_string('A',ar);	
 564:	b8 01       	movw	r22, r16
 566:	81 e4       	ldi	r24, 0x41	; 65
 568:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
 56c:	8f ef       	ldi	r24, 0xFF	; 255
 56e:	91 ee       	ldi	r25, 0xE1	; 225
 570:	24 e0       	ldi	r18, 0x04	; 4
 572:	81 50       	subi	r24, 0x01	; 1
 574:	90 40       	sbci	r25, 0x00	; 0
 576:	20 40       	sbci	r18, 0x00	; 0
 578:	e1 f7       	brne	.-8      	; 0x572 <main+0xea>
 57a:	00 c0       	rjmp	.+0      	; 0x57c <main+0xf4>
 57c:	00 00       	nop
 57e:	0f 90       	pop	r0
 580:	0f 90       	pop	r0
 582:	0f 90       	pop	r0
 584:	0f 90       	pop	r0
 586:	0f 90       	pop	r0
 588:	0f 90       	pop	r0
 58a:	d6 cf       	rjmp	.-84     	; 0x538 <main+0xb0>
		_delay_ms(200);
		}
		else if (BUTTON_read('B',4)==1&&b<999999)
 58c:	64 e0       	ldi	r22, 0x04	; 4
 58e:	82 e4       	ldi	r24, 0x42	; 66
 590:	0e 94 45 00 	call	0x8a	; 0x8a <BUTTON_read>
 594:	81 30       	cpi	r24, 0x01	; 1
 596:	21 f5       	brne	.+72     	; 0x5e0 <main+0x158>
		{
			b++;
 598:	8f ef       	ldi	r24, 0xFF	; 255
 59a:	a8 1a       	sub	r10, r24
 59c:	b8 0a       	sbc	r11, r24
			char ar[10];
			sprintf(ar,"%d",b);
 59e:	bf 92       	push	r11
 5a0:	af 92       	push	r10
 5a2:	ff 92       	push	r15
 5a4:	ef 92       	push	r14
 5a6:	1f 93       	push	r17
 5a8:	0f 93       	push	r16
 5aa:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <sprintf>
			LCD_movecursor('A',1,11);
 5ae:	4b e0       	ldi	r20, 0x0B	; 11
 5b0:	61 e0       	ldi	r22, 0x01	; 1
 5b2:	81 e4       	ldi	r24, 0x41	; 65
 5b4:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
			LCD_send_string('A',ar);
 5b8:	b8 01       	movw	r22, r16
 5ba:	81 e4       	ldi	r24, 0x41	; 65
 5bc:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
 5c0:	9f ef       	ldi	r25, 0xFF	; 255
 5c2:	21 ee       	ldi	r18, 0xE1	; 225
 5c4:	84 e0       	ldi	r24, 0x04	; 4
 5c6:	91 50       	subi	r25, 0x01	; 1
 5c8:	20 40       	sbci	r18, 0x00	; 0
 5ca:	80 40       	sbci	r24, 0x00	; 0
 5cc:	e1 f7       	brne	.-8      	; 0x5c6 <main+0x13e>
 5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <main+0x148>
 5d0:	00 00       	nop
 5d2:	0f 90       	pop	r0
 5d4:	0f 90       	pop	r0
 5d6:	0f 90       	pop	r0
 5d8:	0f 90       	pop	r0
 5da:	0f 90       	pop	r0
 5dc:	0f 90       	pop	r0
 5de:	ac cf       	rjmp	.-168    	; 0x538 <main+0xb0>
			_delay_ms(200);
		}
		else if (BUTTON_read('B',5)==1&&c<999999)
 5e0:	65 e0       	ldi	r22, 0x05	; 5
 5e2:	82 e4       	ldi	r24, 0x42	; 66
 5e4:	0e 94 45 00 	call	0x8a	; 0x8a <BUTTON_read>
 5e8:	81 30       	cpi	r24, 0x01	; 1
 5ea:	21 f5       	brne	.+72     	; 0x634 <main+0x1ac>
		{
			c++;
 5ec:	9f ef       	ldi	r25, 0xFF	; 255
 5ee:	89 1a       	sub	r8, r25
 5f0:	99 0a       	sbc	r9, r25
			char ar[10];
			sprintf(ar,"%d",c);
 5f2:	9f 92       	push	r9
 5f4:	8f 92       	push	r8
 5f6:	ff 92       	push	r15
 5f8:	ef 92       	push	r14
 5fa:	1f 93       	push	r17
 5fc:	0f 93       	push	r16
 5fe:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <sprintf>
			LCD_movecursor('A',2,3);
 602:	43 e0       	ldi	r20, 0x03	; 3
 604:	62 e0       	ldi	r22, 0x02	; 2
 606:	81 e4       	ldi	r24, 0x41	; 65
 608:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
			LCD_send_string('A',ar);
 60c:	b8 01       	movw	r22, r16
 60e:	81 e4       	ldi	r24, 0x41	; 65
 610:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
 614:	2f ef       	ldi	r18, 0xFF	; 255
 616:	81 ee       	ldi	r24, 0xE1	; 225
 618:	94 e0       	ldi	r25, 0x04	; 4
 61a:	21 50       	subi	r18, 0x01	; 1
 61c:	80 40       	sbci	r24, 0x00	; 0
 61e:	90 40       	sbci	r25, 0x00	; 0
 620:	e1 f7       	brne	.-8      	; 0x61a <main+0x192>
 622:	00 c0       	rjmp	.+0      	; 0x624 <main+0x19c>
 624:	00 00       	nop
 626:	0f 90       	pop	r0
 628:	0f 90       	pop	r0
 62a:	0f 90       	pop	r0
 62c:	0f 90       	pop	r0
 62e:	0f 90       	pop	r0
 630:	0f 90       	pop	r0
 632:	82 cf       	rjmp	.-252    	; 0x538 <main+0xb0>
			_delay_ms(200);
		}
		else if (BUTTON_read('B',6)==1&&d<999999)
 634:	66 e0       	ldi	r22, 0x06	; 6
 636:	82 e4       	ldi	r24, 0x42	; 66
 638:	0e 94 45 00 	call	0x8a	; 0x8a <BUTTON_read>
 63c:	81 30       	cpi	r24, 0x01	; 1
 63e:	21 f5       	brne	.+72     	; 0x688 <main+0x200>
		{
			d++;
 640:	2f ef       	ldi	r18, 0xFF	; 255
 642:	62 1a       	sub	r6, r18
 644:	72 0a       	sbc	r7, r18
			char ar[10];
			sprintf(ar,"%d",d);
 646:	7f 92       	push	r7
 648:	6f 92       	push	r6
 64a:	ff 92       	push	r15
 64c:	ef 92       	push	r14
 64e:	1f 93       	push	r17
 650:	0f 93       	push	r16
 652:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <sprintf>
			LCD_movecursor('A',2,11);
 656:	4b e0       	ldi	r20, 0x0B	; 11
 658:	62 e0       	ldi	r22, 0x02	; 2
 65a:	81 e4       	ldi	r24, 0x41	; 65
 65c:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
			LCD_send_string('A',ar);
 660:	b8 01       	movw	r22, r16
 662:	81 e4       	ldi	r24, 0x41	; 65
 664:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
 668:	8f ef       	ldi	r24, 0xFF	; 255
 66a:	91 ee       	ldi	r25, 0xE1	; 225
 66c:	24 e0       	ldi	r18, 0x04	; 4
 66e:	81 50       	subi	r24, 0x01	; 1
 670:	90 40       	sbci	r25, 0x00	; 0
 672:	20 40       	sbci	r18, 0x00	; 0
 674:	e1 f7       	brne	.-8      	; 0x66e <main+0x1e6>
 676:	00 c0       	rjmp	.+0      	; 0x678 <main+0x1f0>
 678:	00 00       	nop
 67a:	0f 90       	pop	r0
 67c:	0f 90       	pop	r0
 67e:	0f 90       	pop	r0
 680:	0f 90       	pop	r0
 682:	0f 90       	pop	r0
 684:	0f 90       	pop	r0
 686:	58 cf       	rjmp	.-336    	; 0x538 <main+0xb0>
			_delay_ms(200);
		}
		else if(BUTTON_read('B',7)==1)
 688:	67 e0       	ldi	r22, 0x07	; 7
 68a:	82 e4       	ldi	r24, 0x42	; 66
 68c:	0e 94 45 00 	call	0x8a	; 0x8a <BUTTON_read>
 690:	81 30       	cpi	r24, 0x01	; 1
 692:	09 f0       	breq	.+2      	; 0x696 <main+0x20e>
 694:	51 cf       	rjmp	.-350    	; 0x538 <main+0xb0>
		{
			a=0,b=0,c=0,d=0;
			 LCD_movecursor('A',1,0);
 696:	40 e0       	ldi	r20, 0x00	; 0
 698:	61 e0       	ldi	r22, 0x01	; 1
 69a:	81 e4       	ldi	r24, 0x41	; 65
 69c:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
			 LCD_send_string('A',"A=0");
 6a0:	60 e6       	ldi	r22, 0x60	; 96
 6a2:	70 e0       	ldi	r23, 0x00	; 0
 6a4:	81 e4       	ldi	r24, 0x41	; 65
 6a6:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
			 LCD_movecursor('A',1,9);
 6aa:	49 e0       	ldi	r20, 0x09	; 9
 6ac:	61 e0       	ldi	r22, 0x01	; 1
 6ae:	81 e4       	ldi	r24, 0x41	; 65
 6b0:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
			 LCD_send_string('A',"B=0");
 6b4:	64 e6       	ldi	r22, 0x64	; 100
 6b6:	70 e0       	ldi	r23, 0x00	; 0
 6b8:	81 e4       	ldi	r24, 0x41	; 65
 6ba:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
			 LCD_movecursor('A',2,1);
 6be:	41 e0       	ldi	r20, 0x01	; 1
 6c0:	62 e0       	ldi	r22, 0x02	; 2
 6c2:	81 e4       	ldi	r24, 0x41	; 65
 6c4:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
			 LCD_send_string('A',"C=0");
 6c8:	68 e6       	ldi	r22, 0x68	; 104
 6ca:	70 e0       	ldi	r23, 0x00	; 0
 6cc:	81 e4       	ldi	r24, 0x41	; 65
 6ce:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
			 LCD_movecursor('A',2,9);
 6d2:	49 e0       	ldi	r20, 0x09	; 9
 6d4:	62 e0       	ldi	r22, 0x02	; 2
 6d6:	81 e4       	ldi	r24, 0x41	; 65
 6d8:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_movecursor>
			 LCD_send_string('A',"D=0");
 6dc:	6c e6       	ldi	r22, 0x6C	; 108
 6de:	70 e0       	ldi	r23, 0x00	; 0
 6e0:	81 e4       	ldi	r24, 0x41	; 65
 6e2:	0e 94 18 02 	call	0x430	; 0x430 <LCD_send_string>
			LCD_send_string('A',ar);
			_delay_ms(200);
		}
		else if(BUTTON_read('B',7)==1)
		{
			a=0,b=0,c=0,d=0;
 6e6:	61 2c       	mov	r6, r1
 6e8:	71 2c       	mov	r7, r1
 6ea:	81 2c       	mov	r8, r1
 6ec:	91 2c       	mov	r9, r1
 6ee:	a1 2c       	mov	r10, r1
 6f0:	b1 2c       	mov	r11, r1
 6f2:	c1 2c       	mov	r12, r1
 6f4:	d1 2c       	mov	r13, r1
 6f6:	20 cf       	rjmp	.-448    	; 0x538 <main+0xb0>

000006f8 <sprintf>:
 6f8:	ae e0       	ldi	r26, 0x0E	; 14
 6fa:	b0 e0       	ldi	r27, 0x00	; 0
 6fc:	e2 e8       	ldi	r30, 0x82	; 130
 6fe:	f3 e0       	ldi	r31, 0x03	; 3
 700:	0c 94 3d 06 	jmp	0xc7a	; 0xc7a <__prologue_saves__+0x1c>
 704:	0d 89       	ldd	r16, Y+21	; 0x15
 706:	1e 89       	ldd	r17, Y+22	; 0x16
 708:	86 e0       	ldi	r24, 0x06	; 6
 70a:	8c 83       	std	Y+4, r24	; 0x04
 70c:	1a 83       	std	Y+2, r17	; 0x02
 70e:	09 83       	std	Y+1, r16	; 0x01
 710:	8f ef       	ldi	r24, 0xFF	; 255
 712:	9f e7       	ldi	r25, 0x7F	; 127
 714:	9e 83       	std	Y+6, r25	; 0x06
 716:	8d 83       	std	Y+5, r24	; 0x05
 718:	ae 01       	movw	r20, r28
 71a:	47 5e       	subi	r20, 0xE7	; 231
 71c:	5f 4f       	sbci	r21, 0xFF	; 255
 71e:	6f 89       	ldd	r22, Y+23	; 0x17
 720:	78 8d       	ldd	r23, Y+24	; 0x18
 722:	ce 01       	movw	r24, r28
 724:	01 96       	adiw	r24, 0x01	; 1
 726:	0e 94 9e 03 	call	0x73c	; 0x73c <vfprintf>
 72a:	ef 81       	ldd	r30, Y+7	; 0x07
 72c:	f8 85       	ldd	r31, Y+8	; 0x08
 72e:	e0 0f       	add	r30, r16
 730:	f1 1f       	adc	r31, r17
 732:	10 82       	st	Z, r1
 734:	2e 96       	adiw	r28, 0x0e	; 14
 736:	e4 e0       	ldi	r30, 0x04	; 4
 738:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__epilogue_restores__+0x1c>

0000073c <vfprintf>:
 73c:	ab e0       	ldi	r26, 0x0B	; 11
 73e:	b0 e0       	ldi	r27, 0x00	; 0
 740:	e4 ea       	ldi	r30, 0xA4	; 164
 742:	f3 e0       	ldi	r31, 0x03	; 3
 744:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__prologue_saves__>
 748:	6c 01       	movw	r12, r24
 74a:	7b 01       	movw	r14, r22
 74c:	8a 01       	movw	r16, r20
 74e:	fc 01       	movw	r30, r24
 750:	17 82       	std	Z+7, r1	; 0x07
 752:	16 82       	std	Z+6, r1	; 0x06
 754:	83 81       	ldd	r24, Z+3	; 0x03
 756:	81 ff       	sbrs	r24, 1
 758:	cc c1       	rjmp	.+920    	; 0xaf2 <__stack+0x293>
 75a:	ce 01       	movw	r24, r28
 75c:	01 96       	adiw	r24, 0x01	; 1
 75e:	3c 01       	movw	r6, r24
 760:	f6 01       	movw	r30, r12
 762:	93 81       	ldd	r25, Z+3	; 0x03
 764:	f7 01       	movw	r30, r14
 766:	93 fd       	sbrc	r25, 3
 768:	85 91       	lpm	r24, Z+
 76a:	93 ff       	sbrs	r25, 3
 76c:	81 91       	ld	r24, Z+
 76e:	7f 01       	movw	r14, r30
 770:	88 23       	and	r24, r24
 772:	09 f4       	brne	.+2      	; 0x776 <vfprintf+0x3a>
 774:	ba c1       	rjmp	.+884    	; 0xaea <__stack+0x28b>
 776:	85 32       	cpi	r24, 0x25	; 37
 778:	39 f4       	brne	.+14     	; 0x788 <vfprintf+0x4c>
 77a:	93 fd       	sbrc	r25, 3
 77c:	85 91       	lpm	r24, Z+
 77e:	93 ff       	sbrs	r25, 3
 780:	81 91       	ld	r24, Z+
 782:	7f 01       	movw	r14, r30
 784:	85 32       	cpi	r24, 0x25	; 37
 786:	29 f4       	brne	.+10     	; 0x792 <vfprintf+0x56>
 788:	b6 01       	movw	r22, r12
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	0e 94 95 05 	call	0xb2a	; 0xb2a <fputc>
 790:	e7 cf       	rjmp	.-50     	; 0x760 <vfprintf+0x24>
 792:	91 2c       	mov	r9, r1
 794:	21 2c       	mov	r2, r1
 796:	31 2c       	mov	r3, r1
 798:	ff e1       	ldi	r31, 0x1F	; 31
 79a:	f3 15       	cp	r31, r3
 79c:	d8 f0       	brcs	.+54     	; 0x7d4 <vfprintf+0x98>
 79e:	8b 32       	cpi	r24, 0x2B	; 43
 7a0:	79 f0       	breq	.+30     	; 0x7c0 <vfprintf+0x84>
 7a2:	38 f4       	brcc	.+14     	; 0x7b2 <vfprintf+0x76>
 7a4:	80 32       	cpi	r24, 0x20	; 32
 7a6:	79 f0       	breq	.+30     	; 0x7c6 <vfprintf+0x8a>
 7a8:	83 32       	cpi	r24, 0x23	; 35
 7aa:	a1 f4       	brne	.+40     	; 0x7d4 <vfprintf+0x98>
 7ac:	23 2d       	mov	r18, r3
 7ae:	20 61       	ori	r18, 0x10	; 16
 7b0:	1d c0       	rjmp	.+58     	; 0x7ec <vfprintf+0xb0>
 7b2:	8d 32       	cpi	r24, 0x2D	; 45
 7b4:	61 f0       	breq	.+24     	; 0x7ce <vfprintf+0x92>
 7b6:	80 33       	cpi	r24, 0x30	; 48
 7b8:	69 f4       	brne	.+26     	; 0x7d4 <vfprintf+0x98>
 7ba:	23 2d       	mov	r18, r3
 7bc:	21 60       	ori	r18, 0x01	; 1
 7be:	16 c0       	rjmp	.+44     	; 0x7ec <vfprintf+0xb0>
 7c0:	83 2d       	mov	r24, r3
 7c2:	82 60       	ori	r24, 0x02	; 2
 7c4:	38 2e       	mov	r3, r24
 7c6:	e3 2d       	mov	r30, r3
 7c8:	e4 60       	ori	r30, 0x04	; 4
 7ca:	3e 2e       	mov	r3, r30
 7cc:	2a c0       	rjmp	.+84     	; 0x822 <vfprintf+0xe6>
 7ce:	f3 2d       	mov	r31, r3
 7d0:	f8 60       	ori	r31, 0x08	; 8
 7d2:	1d c0       	rjmp	.+58     	; 0x80e <vfprintf+0xd2>
 7d4:	37 fc       	sbrc	r3, 7
 7d6:	2d c0       	rjmp	.+90     	; 0x832 <vfprintf+0xf6>
 7d8:	20 ed       	ldi	r18, 0xD0	; 208
 7da:	28 0f       	add	r18, r24
 7dc:	2a 30       	cpi	r18, 0x0A	; 10
 7de:	40 f0       	brcs	.+16     	; 0x7f0 <vfprintf+0xb4>
 7e0:	8e 32       	cpi	r24, 0x2E	; 46
 7e2:	b9 f4       	brne	.+46     	; 0x812 <vfprintf+0xd6>
 7e4:	36 fc       	sbrc	r3, 6
 7e6:	81 c1       	rjmp	.+770    	; 0xaea <__stack+0x28b>
 7e8:	23 2d       	mov	r18, r3
 7ea:	20 64       	ori	r18, 0x40	; 64
 7ec:	32 2e       	mov	r3, r18
 7ee:	19 c0       	rjmp	.+50     	; 0x822 <vfprintf+0xe6>
 7f0:	36 fe       	sbrs	r3, 6
 7f2:	06 c0       	rjmp	.+12     	; 0x800 <vfprintf+0xc4>
 7f4:	8a e0       	ldi	r24, 0x0A	; 10
 7f6:	98 9e       	mul	r9, r24
 7f8:	20 0d       	add	r18, r0
 7fa:	11 24       	eor	r1, r1
 7fc:	92 2e       	mov	r9, r18
 7fe:	11 c0       	rjmp	.+34     	; 0x822 <vfprintf+0xe6>
 800:	ea e0       	ldi	r30, 0x0A	; 10
 802:	2e 9e       	mul	r2, r30
 804:	20 0d       	add	r18, r0
 806:	11 24       	eor	r1, r1
 808:	22 2e       	mov	r2, r18
 80a:	f3 2d       	mov	r31, r3
 80c:	f0 62       	ori	r31, 0x20	; 32
 80e:	3f 2e       	mov	r3, r31
 810:	08 c0       	rjmp	.+16     	; 0x822 <vfprintf+0xe6>
 812:	8c 36       	cpi	r24, 0x6C	; 108
 814:	21 f4       	brne	.+8      	; 0x81e <vfprintf+0xe2>
 816:	83 2d       	mov	r24, r3
 818:	80 68       	ori	r24, 0x80	; 128
 81a:	38 2e       	mov	r3, r24
 81c:	02 c0       	rjmp	.+4      	; 0x822 <vfprintf+0xe6>
 81e:	88 36       	cpi	r24, 0x68	; 104
 820:	41 f4       	brne	.+16     	; 0x832 <vfprintf+0xf6>
 822:	f7 01       	movw	r30, r14
 824:	93 fd       	sbrc	r25, 3
 826:	85 91       	lpm	r24, Z+
 828:	93 ff       	sbrs	r25, 3
 82a:	81 91       	ld	r24, Z+
 82c:	7f 01       	movw	r14, r30
 82e:	81 11       	cpse	r24, r1
 830:	b3 cf       	rjmp	.-154    	; 0x798 <vfprintf+0x5c>
 832:	98 2f       	mov	r25, r24
 834:	9f 7d       	andi	r25, 0xDF	; 223
 836:	95 54       	subi	r25, 0x45	; 69
 838:	93 30       	cpi	r25, 0x03	; 3
 83a:	28 f4       	brcc	.+10     	; 0x846 <vfprintf+0x10a>
 83c:	0c 5f       	subi	r16, 0xFC	; 252
 83e:	1f 4f       	sbci	r17, 0xFF	; 255
 840:	9f e3       	ldi	r25, 0x3F	; 63
 842:	99 83       	std	Y+1, r25	; 0x01
 844:	0d c0       	rjmp	.+26     	; 0x860 <__stack+0x1>
 846:	83 36       	cpi	r24, 0x63	; 99
 848:	31 f0       	breq	.+12     	; 0x856 <vfprintf+0x11a>
 84a:	83 37       	cpi	r24, 0x73	; 115
 84c:	71 f0       	breq	.+28     	; 0x86a <__stack+0xb>
 84e:	83 35       	cpi	r24, 0x53	; 83
 850:	09 f0       	breq	.+2      	; 0x854 <vfprintf+0x118>
 852:	59 c0       	rjmp	.+178    	; 0x906 <__stack+0xa7>
 854:	21 c0       	rjmp	.+66     	; 0x898 <__stack+0x39>
 856:	f8 01       	movw	r30, r16
 858:	80 81       	ld	r24, Z
 85a:	89 83       	std	Y+1, r24	; 0x01
 85c:	0e 5f       	subi	r16, 0xFE	; 254
 85e:	1f 4f       	sbci	r17, 0xFF	; 255
 860:	88 24       	eor	r8, r8
 862:	83 94       	inc	r8
 864:	91 2c       	mov	r9, r1
 866:	53 01       	movw	r10, r6
 868:	13 c0       	rjmp	.+38     	; 0x890 <__stack+0x31>
 86a:	28 01       	movw	r4, r16
 86c:	f2 e0       	ldi	r31, 0x02	; 2
 86e:	4f 0e       	add	r4, r31
 870:	51 1c       	adc	r5, r1
 872:	f8 01       	movw	r30, r16
 874:	a0 80       	ld	r10, Z
 876:	b1 80       	ldd	r11, Z+1	; 0x01
 878:	36 fe       	sbrs	r3, 6
 87a:	03 c0       	rjmp	.+6      	; 0x882 <__stack+0x23>
 87c:	69 2d       	mov	r22, r9
 87e:	70 e0       	ldi	r23, 0x00	; 0
 880:	02 c0       	rjmp	.+4      	; 0x886 <__stack+0x27>
 882:	6f ef       	ldi	r22, 0xFF	; 255
 884:	7f ef       	ldi	r23, 0xFF	; 255
 886:	c5 01       	movw	r24, r10
 888:	0e 94 8a 05 	call	0xb14	; 0xb14 <strnlen>
 88c:	4c 01       	movw	r8, r24
 88e:	82 01       	movw	r16, r4
 890:	f3 2d       	mov	r31, r3
 892:	ff 77       	andi	r31, 0x7F	; 127
 894:	3f 2e       	mov	r3, r31
 896:	16 c0       	rjmp	.+44     	; 0x8c4 <__stack+0x65>
 898:	28 01       	movw	r4, r16
 89a:	22 e0       	ldi	r18, 0x02	; 2
 89c:	42 0e       	add	r4, r18
 89e:	51 1c       	adc	r5, r1
 8a0:	f8 01       	movw	r30, r16
 8a2:	a0 80       	ld	r10, Z
 8a4:	b1 80       	ldd	r11, Z+1	; 0x01
 8a6:	36 fe       	sbrs	r3, 6
 8a8:	03 c0       	rjmp	.+6      	; 0x8b0 <__stack+0x51>
 8aa:	69 2d       	mov	r22, r9
 8ac:	70 e0       	ldi	r23, 0x00	; 0
 8ae:	02 c0       	rjmp	.+4      	; 0x8b4 <__stack+0x55>
 8b0:	6f ef       	ldi	r22, 0xFF	; 255
 8b2:	7f ef       	ldi	r23, 0xFF	; 255
 8b4:	c5 01       	movw	r24, r10
 8b6:	0e 94 7f 05 	call	0xafe	; 0xafe <strnlen_P>
 8ba:	4c 01       	movw	r8, r24
 8bc:	f3 2d       	mov	r31, r3
 8be:	f0 68       	ori	r31, 0x80	; 128
 8c0:	3f 2e       	mov	r3, r31
 8c2:	82 01       	movw	r16, r4
 8c4:	33 fc       	sbrc	r3, 3
 8c6:	1b c0       	rjmp	.+54     	; 0x8fe <__stack+0x9f>
 8c8:	82 2d       	mov	r24, r2
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	88 16       	cp	r8, r24
 8ce:	99 06       	cpc	r9, r25
 8d0:	b0 f4       	brcc	.+44     	; 0x8fe <__stack+0x9f>
 8d2:	b6 01       	movw	r22, r12
 8d4:	80 e2       	ldi	r24, 0x20	; 32
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	0e 94 95 05 	call	0xb2a	; 0xb2a <fputc>
 8dc:	2a 94       	dec	r2
 8de:	f4 cf       	rjmp	.-24     	; 0x8c8 <__stack+0x69>
 8e0:	f5 01       	movw	r30, r10
 8e2:	37 fc       	sbrc	r3, 7
 8e4:	85 91       	lpm	r24, Z+
 8e6:	37 fe       	sbrs	r3, 7
 8e8:	81 91       	ld	r24, Z+
 8ea:	5f 01       	movw	r10, r30
 8ec:	b6 01       	movw	r22, r12
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	0e 94 95 05 	call	0xb2a	; 0xb2a <fputc>
 8f4:	21 10       	cpse	r2, r1
 8f6:	2a 94       	dec	r2
 8f8:	21 e0       	ldi	r18, 0x01	; 1
 8fa:	82 1a       	sub	r8, r18
 8fc:	91 08       	sbc	r9, r1
 8fe:	81 14       	cp	r8, r1
 900:	91 04       	cpc	r9, r1
 902:	71 f7       	brne	.-36     	; 0x8e0 <__stack+0x81>
 904:	e8 c0       	rjmp	.+464    	; 0xad6 <__stack+0x277>
 906:	84 36       	cpi	r24, 0x64	; 100
 908:	11 f0       	breq	.+4      	; 0x90e <__stack+0xaf>
 90a:	89 36       	cpi	r24, 0x69	; 105
 90c:	41 f5       	brne	.+80     	; 0x95e <__stack+0xff>
 90e:	f8 01       	movw	r30, r16
 910:	37 fe       	sbrs	r3, 7
 912:	07 c0       	rjmp	.+14     	; 0x922 <__stack+0xc3>
 914:	60 81       	ld	r22, Z
 916:	71 81       	ldd	r23, Z+1	; 0x01
 918:	82 81       	ldd	r24, Z+2	; 0x02
 91a:	93 81       	ldd	r25, Z+3	; 0x03
 91c:	0c 5f       	subi	r16, 0xFC	; 252
 91e:	1f 4f       	sbci	r17, 0xFF	; 255
 920:	08 c0       	rjmp	.+16     	; 0x932 <__stack+0xd3>
 922:	60 81       	ld	r22, Z
 924:	71 81       	ldd	r23, Z+1	; 0x01
 926:	07 2e       	mov	r0, r23
 928:	00 0c       	add	r0, r0
 92a:	88 0b       	sbc	r24, r24
 92c:	99 0b       	sbc	r25, r25
 92e:	0e 5f       	subi	r16, 0xFE	; 254
 930:	1f 4f       	sbci	r17, 0xFF	; 255
 932:	f3 2d       	mov	r31, r3
 934:	ff 76       	andi	r31, 0x6F	; 111
 936:	3f 2e       	mov	r3, r31
 938:	97 ff       	sbrs	r25, 7
 93a:	09 c0       	rjmp	.+18     	; 0x94e <__stack+0xef>
 93c:	90 95       	com	r25
 93e:	80 95       	com	r24
 940:	70 95       	com	r23
 942:	61 95       	neg	r22
 944:	7f 4f       	sbci	r23, 0xFF	; 255
 946:	8f 4f       	sbci	r24, 0xFF	; 255
 948:	9f 4f       	sbci	r25, 0xFF	; 255
 94a:	f0 68       	ori	r31, 0x80	; 128
 94c:	3f 2e       	mov	r3, r31
 94e:	2a e0       	ldi	r18, 0x0A	; 10
 950:	30 e0       	ldi	r19, 0x00	; 0
 952:	a3 01       	movw	r20, r6
 954:	0e 94 d1 05 	call	0xba2	; 0xba2 <__ultoa_invert>
 958:	88 2e       	mov	r8, r24
 95a:	86 18       	sub	r8, r6
 95c:	45 c0       	rjmp	.+138    	; 0x9e8 <__stack+0x189>
 95e:	85 37       	cpi	r24, 0x75	; 117
 960:	31 f4       	brne	.+12     	; 0x96e <__stack+0x10f>
 962:	23 2d       	mov	r18, r3
 964:	2f 7e       	andi	r18, 0xEF	; 239
 966:	b2 2e       	mov	r11, r18
 968:	2a e0       	ldi	r18, 0x0A	; 10
 96a:	30 e0       	ldi	r19, 0x00	; 0
 96c:	25 c0       	rjmp	.+74     	; 0x9b8 <__stack+0x159>
 96e:	93 2d       	mov	r25, r3
 970:	99 7f       	andi	r25, 0xF9	; 249
 972:	b9 2e       	mov	r11, r25
 974:	8f 36       	cpi	r24, 0x6F	; 111
 976:	c1 f0       	breq	.+48     	; 0x9a8 <__stack+0x149>
 978:	18 f4       	brcc	.+6      	; 0x980 <__stack+0x121>
 97a:	88 35       	cpi	r24, 0x58	; 88
 97c:	79 f0       	breq	.+30     	; 0x99c <__stack+0x13d>
 97e:	b5 c0       	rjmp	.+362    	; 0xaea <__stack+0x28b>
 980:	80 37       	cpi	r24, 0x70	; 112
 982:	19 f0       	breq	.+6      	; 0x98a <__stack+0x12b>
 984:	88 37       	cpi	r24, 0x78	; 120
 986:	21 f0       	breq	.+8      	; 0x990 <__stack+0x131>
 988:	b0 c0       	rjmp	.+352    	; 0xaea <__stack+0x28b>
 98a:	e9 2f       	mov	r30, r25
 98c:	e0 61       	ori	r30, 0x10	; 16
 98e:	be 2e       	mov	r11, r30
 990:	b4 fe       	sbrs	r11, 4
 992:	0d c0       	rjmp	.+26     	; 0x9ae <__stack+0x14f>
 994:	fb 2d       	mov	r31, r11
 996:	f4 60       	ori	r31, 0x04	; 4
 998:	bf 2e       	mov	r11, r31
 99a:	09 c0       	rjmp	.+18     	; 0x9ae <__stack+0x14f>
 99c:	34 fe       	sbrs	r3, 4
 99e:	0a c0       	rjmp	.+20     	; 0x9b4 <__stack+0x155>
 9a0:	29 2f       	mov	r18, r25
 9a2:	26 60       	ori	r18, 0x06	; 6
 9a4:	b2 2e       	mov	r11, r18
 9a6:	06 c0       	rjmp	.+12     	; 0x9b4 <__stack+0x155>
 9a8:	28 e0       	ldi	r18, 0x08	; 8
 9aa:	30 e0       	ldi	r19, 0x00	; 0
 9ac:	05 c0       	rjmp	.+10     	; 0x9b8 <__stack+0x159>
 9ae:	20 e1       	ldi	r18, 0x10	; 16
 9b0:	30 e0       	ldi	r19, 0x00	; 0
 9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <__stack+0x159>
 9b4:	20 e1       	ldi	r18, 0x10	; 16
 9b6:	32 e0       	ldi	r19, 0x02	; 2
 9b8:	f8 01       	movw	r30, r16
 9ba:	b7 fe       	sbrs	r11, 7
 9bc:	07 c0       	rjmp	.+14     	; 0x9cc <__stack+0x16d>
 9be:	60 81       	ld	r22, Z
 9c0:	71 81       	ldd	r23, Z+1	; 0x01
 9c2:	82 81       	ldd	r24, Z+2	; 0x02
 9c4:	93 81       	ldd	r25, Z+3	; 0x03
 9c6:	0c 5f       	subi	r16, 0xFC	; 252
 9c8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ca:	06 c0       	rjmp	.+12     	; 0x9d8 <__stack+0x179>
 9cc:	60 81       	ld	r22, Z
 9ce:	71 81       	ldd	r23, Z+1	; 0x01
 9d0:	80 e0       	ldi	r24, 0x00	; 0
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	0e 5f       	subi	r16, 0xFE	; 254
 9d6:	1f 4f       	sbci	r17, 0xFF	; 255
 9d8:	a3 01       	movw	r20, r6
 9da:	0e 94 d1 05 	call	0xba2	; 0xba2 <__ultoa_invert>
 9de:	88 2e       	mov	r8, r24
 9e0:	86 18       	sub	r8, r6
 9e2:	fb 2d       	mov	r31, r11
 9e4:	ff 77       	andi	r31, 0x7F	; 127
 9e6:	3f 2e       	mov	r3, r31
 9e8:	36 fe       	sbrs	r3, 6
 9ea:	0d c0       	rjmp	.+26     	; 0xa06 <__stack+0x1a7>
 9ec:	23 2d       	mov	r18, r3
 9ee:	2e 7f       	andi	r18, 0xFE	; 254
 9f0:	a2 2e       	mov	r10, r18
 9f2:	89 14       	cp	r8, r9
 9f4:	58 f4       	brcc	.+22     	; 0xa0c <__stack+0x1ad>
 9f6:	34 fe       	sbrs	r3, 4
 9f8:	0b c0       	rjmp	.+22     	; 0xa10 <__stack+0x1b1>
 9fa:	32 fc       	sbrc	r3, 2
 9fc:	09 c0       	rjmp	.+18     	; 0xa10 <__stack+0x1b1>
 9fe:	83 2d       	mov	r24, r3
 a00:	8e 7e       	andi	r24, 0xEE	; 238
 a02:	a8 2e       	mov	r10, r24
 a04:	05 c0       	rjmp	.+10     	; 0xa10 <__stack+0x1b1>
 a06:	b8 2c       	mov	r11, r8
 a08:	a3 2c       	mov	r10, r3
 a0a:	03 c0       	rjmp	.+6      	; 0xa12 <__stack+0x1b3>
 a0c:	b8 2c       	mov	r11, r8
 a0e:	01 c0       	rjmp	.+2      	; 0xa12 <__stack+0x1b3>
 a10:	b9 2c       	mov	r11, r9
 a12:	a4 fe       	sbrs	r10, 4
 a14:	0f c0       	rjmp	.+30     	; 0xa34 <__stack+0x1d5>
 a16:	fe 01       	movw	r30, r28
 a18:	e8 0d       	add	r30, r8
 a1a:	f1 1d       	adc	r31, r1
 a1c:	80 81       	ld	r24, Z
 a1e:	80 33       	cpi	r24, 0x30	; 48
 a20:	21 f4       	brne	.+8      	; 0xa2a <__stack+0x1cb>
 a22:	9a 2d       	mov	r25, r10
 a24:	99 7e       	andi	r25, 0xE9	; 233
 a26:	a9 2e       	mov	r10, r25
 a28:	09 c0       	rjmp	.+18     	; 0xa3c <__stack+0x1dd>
 a2a:	a2 fe       	sbrs	r10, 2
 a2c:	06 c0       	rjmp	.+12     	; 0xa3a <__stack+0x1db>
 a2e:	b3 94       	inc	r11
 a30:	b3 94       	inc	r11
 a32:	04 c0       	rjmp	.+8      	; 0xa3c <__stack+0x1dd>
 a34:	8a 2d       	mov	r24, r10
 a36:	86 78       	andi	r24, 0x86	; 134
 a38:	09 f0       	breq	.+2      	; 0xa3c <__stack+0x1dd>
 a3a:	b3 94       	inc	r11
 a3c:	a3 fc       	sbrc	r10, 3
 a3e:	11 c0       	rjmp	.+34     	; 0xa62 <__stack+0x203>
 a40:	a0 fe       	sbrs	r10, 0
 a42:	06 c0       	rjmp	.+12     	; 0xa50 <__stack+0x1f1>
 a44:	b2 14       	cp	r11, r2
 a46:	88 f4       	brcc	.+34     	; 0xa6a <__stack+0x20b>
 a48:	28 0c       	add	r2, r8
 a4a:	92 2c       	mov	r9, r2
 a4c:	9b 18       	sub	r9, r11
 a4e:	0e c0       	rjmp	.+28     	; 0xa6c <__stack+0x20d>
 a50:	b2 14       	cp	r11, r2
 a52:	60 f4       	brcc	.+24     	; 0xa6c <__stack+0x20d>
 a54:	b6 01       	movw	r22, r12
 a56:	80 e2       	ldi	r24, 0x20	; 32
 a58:	90 e0       	ldi	r25, 0x00	; 0
 a5a:	0e 94 95 05 	call	0xb2a	; 0xb2a <fputc>
 a5e:	b3 94       	inc	r11
 a60:	f7 cf       	rjmp	.-18     	; 0xa50 <__stack+0x1f1>
 a62:	b2 14       	cp	r11, r2
 a64:	18 f4       	brcc	.+6      	; 0xa6c <__stack+0x20d>
 a66:	2b 18       	sub	r2, r11
 a68:	02 c0       	rjmp	.+4      	; 0xa6e <__stack+0x20f>
 a6a:	98 2c       	mov	r9, r8
 a6c:	21 2c       	mov	r2, r1
 a6e:	a4 fe       	sbrs	r10, 4
 a70:	10 c0       	rjmp	.+32     	; 0xa92 <__stack+0x233>
 a72:	b6 01       	movw	r22, r12
 a74:	80 e3       	ldi	r24, 0x30	; 48
 a76:	90 e0       	ldi	r25, 0x00	; 0
 a78:	0e 94 95 05 	call	0xb2a	; 0xb2a <fputc>
 a7c:	a2 fe       	sbrs	r10, 2
 a7e:	17 c0       	rjmp	.+46     	; 0xaae <__stack+0x24f>
 a80:	a1 fc       	sbrc	r10, 1
 a82:	03 c0       	rjmp	.+6      	; 0xa8a <__stack+0x22b>
 a84:	88 e7       	ldi	r24, 0x78	; 120
 a86:	90 e0       	ldi	r25, 0x00	; 0
 a88:	02 c0       	rjmp	.+4      	; 0xa8e <__stack+0x22f>
 a8a:	88 e5       	ldi	r24, 0x58	; 88
 a8c:	90 e0       	ldi	r25, 0x00	; 0
 a8e:	b6 01       	movw	r22, r12
 a90:	0c c0       	rjmp	.+24     	; 0xaaa <__stack+0x24b>
 a92:	8a 2d       	mov	r24, r10
 a94:	86 78       	andi	r24, 0x86	; 134
 a96:	59 f0       	breq	.+22     	; 0xaae <__stack+0x24f>
 a98:	a1 fe       	sbrs	r10, 1
 a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <__stack+0x241>
 a9c:	8b e2       	ldi	r24, 0x2B	; 43
 a9e:	01 c0       	rjmp	.+2      	; 0xaa2 <__stack+0x243>
 aa0:	80 e2       	ldi	r24, 0x20	; 32
 aa2:	a7 fc       	sbrc	r10, 7
 aa4:	8d e2       	ldi	r24, 0x2D	; 45
 aa6:	b6 01       	movw	r22, r12
 aa8:	90 e0       	ldi	r25, 0x00	; 0
 aaa:	0e 94 95 05 	call	0xb2a	; 0xb2a <fputc>
 aae:	89 14       	cp	r8, r9
 ab0:	38 f4       	brcc	.+14     	; 0xac0 <__stack+0x261>
 ab2:	b6 01       	movw	r22, r12
 ab4:	80 e3       	ldi	r24, 0x30	; 48
 ab6:	90 e0       	ldi	r25, 0x00	; 0
 ab8:	0e 94 95 05 	call	0xb2a	; 0xb2a <fputc>
 abc:	9a 94       	dec	r9
 abe:	f7 cf       	rjmp	.-18     	; 0xaae <__stack+0x24f>
 ac0:	8a 94       	dec	r8
 ac2:	f3 01       	movw	r30, r6
 ac4:	e8 0d       	add	r30, r8
 ac6:	f1 1d       	adc	r31, r1
 ac8:	80 81       	ld	r24, Z
 aca:	b6 01       	movw	r22, r12
 acc:	90 e0       	ldi	r25, 0x00	; 0
 ace:	0e 94 95 05 	call	0xb2a	; 0xb2a <fputc>
 ad2:	81 10       	cpse	r8, r1
 ad4:	f5 cf       	rjmp	.-22     	; 0xac0 <__stack+0x261>
 ad6:	22 20       	and	r2, r2
 ad8:	09 f4       	brne	.+2      	; 0xadc <__stack+0x27d>
 ada:	42 ce       	rjmp	.-892    	; 0x760 <vfprintf+0x24>
 adc:	b6 01       	movw	r22, r12
 ade:	80 e2       	ldi	r24, 0x20	; 32
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	0e 94 95 05 	call	0xb2a	; 0xb2a <fputc>
 ae6:	2a 94       	dec	r2
 ae8:	f6 cf       	rjmp	.-20     	; 0xad6 <__stack+0x277>
 aea:	f6 01       	movw	r30, r12
 aec:	86 81       	ldd	r24, Z+6	; 0x06
 aee:	97 81       	ldd	r25, Z+7	; 0x07
 af0:	02 c0       	rjmp	.+4      	; 0xaf6 <__stack+0x297>
 af2:	8f ef       	ldi	r24, 0xFF	; 255
 af4:	9f ef       	ldi	r25, 0xFF	; 255
 af6:	2b 96       	adiw	r28, 0x0b	; 11
 af8:	e2 e1       	ldi	r30, 0x12	; 18
 afa:	0c 94 4b 06 	jmp	0xc96	; 0xc96 <__epilogue_restores__>

00000afe <strnlen_P>:
 afe:	fc 01       	movw	r30, r24
 b00:	05 90       	lpm	r0, Z+
 b02:	61 50       	subi	r22, 0x01	; 1
 b04:	70 40       	sbci	r23, 0x00	; 0
 b06:	01 10       	cpse	r0, r1
 b08:	d8 f7       	brcc	.-10     	; 0xb00 <strnlen_P+0x2>
 b0a:	80 95       	com	r24
 b0c:	90 95       	com	r25
 b0e:	8e 0f       	add	r24, r30
 b10:	9f 1f       	adc	r25, r31
 b12:	08 95       	ret

00000b14 <strnlen>:
 b14:	fc 01       	movw	r30, r24
 b16:	61 50       	subi	r22, 0x01	; 1
 b18:	70 40       	sbci	r23, 0x00	; 0
 b1a:	01 90       	ld	r0, Z+
 b1c:	01 10       	cpse	r0, r1
 b1e:	d8 f7       	brcc	.-10     	; 0xb16 <strnlen+0x2>
 b20:	80 95       	com	r24
 b22:	90 95       	com	r25
 b24:	8e 0f       	add	r24, r30
 b26:	9f 1f       	adc	r25, r31
 b28:	08 95       	ret

00000b2a <fputc>:
 b2a:	0f 93       	push	r16
 b2c:	1f 93       	push	r17
 b2e:	cf 93       	push	r28
 b30:	df 93       	push	r29
 b32:	fb 01       	movw	r30, r22
 b34:	23 81       	ldd	r18, Z+3	; 0x03
 b36:	21 fd       	sbrc	r18, 1
 b38:	03 c0       	rjmp	.+6      	; 0xb40 <fputc+0x16>
 b3a:	8f ef       	ldi	r24, 0xFF	; 255
 b3c:	9f ef       	ldi	r25, 0xFF	; 255
 b3e:	2c c0       	rjmp	.+88     	; 0xb98 <fputc+0x6e>
 b40:	22 ff       	sbrs	r18, 2
 b42:	16 c0       	rjmp	.+44     	; 0xb70 <fputc+0x46>
 b44:	46 81       	ldd	r20, Z+6	; 0x06
 b46:	57 81       	ldd	r21, Z+7	; 0x07
 b48:	24 81       	ldd	r18, Z+4	; 0x04
 b4a:	35 81       	ldd	r19, Z+5	; 0x05
 b4c:	42 17       	cp	r20, r18
 b4e:	53 07       	cpc	r21, r19
 b50:	44 f4       	brge	.+16     	; 0xb62 <fputc+0x38>
 b52:	a0 81       	ld	r26, Z
 b54:	b1 81       	ldd	r27, Z+1	; 0x01
 b56:	9d 01       	movw	r18, r26
 b58:	2f 5f       	subi	r18, 0xFF	; 255
 b5a:	3f 4f       	sbci	r19, 0xFF	; 255
 b5c:	31 83       	std	Z+1, r19	; 0x01
 b5e:	20 83       	st	Z, r18
 b60:	8c 93       	st	X, r24
 b62:	26 81       	ldd	r18, Z+6	; 0x06
 b64:	37 81       	ldd	r19, Z+7	; 0x07
 b66:	2f 5f       	subi	r18, 0xFF	; 255
 b68:	3f 4f       	sbci	r19, 0xFF	; 255
 b6a:	37 83       	std	Z+7, r19	; 0x07
 b6c:	26 83       	std	Z+6, r18	; 0x06
 b6e:	14 c0       	rjmp	.+40     	; 0xb98 <fputc+0x6e>
 b70:	8b 01       	movw	r16, r22
 b72:	ec 01       	movw	r28, r24
 b74:	fb 01       	movw	r30, r22
 b76:	00 84       	ldd	r0, Z+8	; 0x08
 b78:	f1 85       	ldd	r31, Z+9	; 0x09
 b7a:	e0 2d       	mov	r30, r0
 b7c:	09 95       	icall
 b7e:	89 2b       	or	r24, r25
 b80:	e1 f6       	brne	.-72     	; 0xb3a <fputc+0x10>
 b82:	d8 01       	movw	r26, r16
 b84:	16 96       	adiw	r26, 0x06	; 6
 b86:	8d 91       	ld	r24, X+
 b88:	9c 91       	ld	r25, X
 b8a:	17 97       	sbiw	r26, 0x07	; 7
 b8c:	01 96       	adiw	r24, 0x01	; 1
 b8e:	17 96       	adiw	r26, 0x07	; 7
 b90:	9c 93       	st	X, r25
 b92:	8e 93       	st	-X, r24
 b94:	16 97       	sbiw	r26, 0x06	; 6
 b96:	ce 01       	movw	r24, r28
 b98:	df 91       	pop	r29
 b9a:	cf 91       	pop	r28
 b9c:	1f 91       	pop	r17
 b9e:	0f 91       	pop	r16
 ba0:	08 95       	ret

00000ba2 <__ultoa_invert>:
 ba2:	fa 01       	movw	r30, r20
 ba4:	aa 27       	eor	r26, r26
 ba6:	28 30       	cpi	r18, 0x08	; 8
 ba8:	51 f1       	breq	.+84     	; 0xbfe <__ultoa_invert+0x5c>
 baa:	20 31       	cpi	r18, 0x10	; 16
 bac:	81 f1       	breq	.+96     	; 0xc0e <__ultoa_invert+0x6c>
 bae:	e8 94       	clt
 bb0:	6f 93       	push	r22
 bb2:	6e 7f       	andi	r22, 0xFE	; 254
 bb4:	6e 5f       	subi	r22, 0xFE	; 254
 bb6:	7f 4f       	sbci	r23, 0xFF	; 255
 bb8:	8f 4f       	sbci	r24, 0xFF	; 255
 bba:	9f 4f       	sbci	r25, 0xFF	; 255
 bbc:	af 4f       	sbci	r26, 0xFF	; 255
 bbe:	b1 e0       	ldi	r27, 0x01	; 1
 bc0:	3e d0       	rcall	.+124    	; 0xc3e <__ultoa_invert+0x9c>
 bc2:	b4 e0       	ldi	r27, 0x04	; 4
 bc4:	3c d0       	rcall	.+120    	; 0xc3e <__ultoa_invert+0x9c>
 bc6:	67 0f       	add	r22, r23
 bc8:	78 1f       	adc	r23, r24
 bca:	89 1f       	adc	r24, r25
 bcc:	9a 1f       	adc	r25, r26
 bce:	a1 1d       	adc	r26, r1
 bd0:	68 0f       	add	r22, r24
 bd2:	79 1f       	adc	r23, r25
 bd4:	8a 1f       	adc	r24, r26
 bd6:	91 1d       	adc	r25, r1
 bd8:	a1 1d       	adc	r26, r1
 bda:	6a 0f       	add	r22, r26
 bdc:	71 1d       	adc	r23, r1
 bde:	81 1d       	adc	r24, r1
 be0:	91 1d       	adc	r25, r1
 be2:	a1 1d       	adc	r26, r1
 be4:	20 d0       	rcall	.+64     	; 0xc26 <__ultoa_invert+0x84>
 be6:	09 f4       	brne	.+2      	; 0xbea <__ultoa_invert+0x48>
 be8:	68 94       	set
 bea:	3f 91       	pop	r19
 bec:	2a e0       	ldi	r18, 0x0A	; 10
 bee:	26 9f       	mul	r18, r22
 bf0:	11 24       	eor	r1, r1
 bf2:	30 19       	sub	r19, r0
 bf4:	30 5d       	subi	r19, 0xD0	; 208
 bf6:	31 93       	st	Z+, r19
 bf8:	de f6       	brtc	.-74     	; 0xbb0 <__ultoa_invert+0xe>
 bfa:	cf 01       	movw	r24, r30
 bfc:	08 95       	ret
 bfe:	46 2f       	mov	r20, r22
 c00:	47 70       	andi	r20, 0x07	; 7
 c02:	40 5d       	subi	r20, 0xD0	; 208
 c04:	41 93       	st	Z+, r20
 c06:	b3 e0       	ldi	r27, 0x03	; 3
 c08:	0f d0       	rcall	.+30     	; 0xc28 <__ultoa_invert+0x86>
 c0a:	c9 f7       	brne	.-14     	; 0xbfe <__ultoa_invert+0x5c>
 c0c:	f6 cf       	rjmp	.-20     	; 0xbfa <__ultoa_invert+0x58>
 c0e:	46 2f       	mov	r20, r22
 c10:	4f 70       	andi	r20, 0x0F	; 15
 c12:	40 5d       	subi	r20, 0xD0	; 208
 c14:	4a 33       	cpi	r20, 0x3A	; 58
 c16:	18 f0       	brcs	.+6      	; 0xc1e <__ultoa_invert+0x7c>
 c18:	49 5d       	subi	r20, 0xD9	; 217
 c1a:	31 fd       	sbrc	r19, 1
 c1c:	40 52       	subi	r20, 0x20	; 32
 c1e:	41 93       	st	Z+, r20
 c20:	02 d0       	rcall	.+4      	; 0xc26 <__ultoa_invert+0x84>
 c22:	a9 f7       	brne	.-22     	; 0xc0e <__ultoa_invert+0x6c>
 c24:	ea cf       	rjmp	.-44     	; 0xbfa <__ultoa_invert+0x58>
 c26:	b4 e0       	ldi	r27, 0x04	; 4
 c28:	a6 95       	lsr	r26
 c2a:	97 95       	ror	r25
 c2c:	87 95       	ror	r24
 c2e:	77 95       	ror	r23
 c30:	67 95       	ror	r22
 c32:	ba 95       	dec	r27
 c34:	c9 f7       	brne	.-14     	; 0xc28 <__ultoa_invert+0x86>
 c36:	00 97       	sbiw	r24, 0x00	; 0
 c38:	61 05       	cpc	r22, r1
 c3a:	71 05       	cpc	r23, r1
 c3c:	08 95       	ret
 c3e:	9b 01       	movw	r18, r22
 c40:	ac 01       	movw	r20, r24
 c42:	0a 2e       	mov	r0, r26
 c44:	06 94       	lsr	r0
 c46:	57 95       	ror	r21
 c48:	47 95       	ror	r20
 c4a:	37 95       	ror	r19
 c4c:	27 95       	ror	r18
 c4e:	ba 95       	dec	r27
 c50:	c9 f7       	brne	.-14     	; 0xc44 <__ultoa_invert+0xa2>
 c52:	62 0f       	add	r22, r18
 c54:	73 1f       	adc	r23, r19
 c56:	84 1f       	adc	r24, r20
 c58:	95 1f       	adc	r25, r21
 c5a:	a0 1d       	adc	r26, r0
 c5c:	08 95       	ret

00000c5e <__prologue_saves__>:
 c5e:	2f 92       	push	r2
 c60:	3f 92       	push	r3
 c62:	4f 92       	push	r4
 c64:	5f 92       	push	r5
 c66:	6f 92       	push	r6
 c68:	7f 92       	push	r7
 c6a:	8f 92       	push	r8
 c6c:	9f 92       	push	r9
 c6e:	af 92       	push	r10
 c70:	bf 92       	push	r11
 c72:	cf 92       	push	r12
 c74:	df 92       	push	r13
 c76:	ef 92       	push	r14
 c78:	ff 92       	push	r15
 c7a:	0f 93       	push	r16
 c7c:	1f 93       	push	r17
 c7e:	cf 93       	push	r28
 c80:	df 93       	push	r29
 c82:	cd b7       	in	r28, 0x3d	; 61
 c84:	de b7       	in	r29, 0x3e	; 62
 c86:	ca 1b       	sub	r28, r26
 c88:	db 0b       	sbc	r29, r27
 c8a:	0f b6       	in	r0, 0x3f	; 63
 c8c:	f8 94       	cli
 c8e:	de bf       	out	0x3e, r29	; 62
 c90:	0f be       	out	0x3f, r0	; 63
 c92:	cd bf       	out	0x3d, r28	; 61
 c94:	09 94       	ijmp

00000c96 <__epilogue_restores__>:
 c96:	2a 88       	ldd	r2, Y+18	; 0x12
 c98:	39 88       	ldd	r3, Y+17	; 0x11
 c9a:	48 88       	ldd	r4, Y+16	; 0x10
 c9c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c9e:	6e 84       	ldd	r6, Y+14	; 0x0e
 ca0:	7d 84       	ldd	r7, Y+13	; 0x0d
 ca2:	8c 84       	ldd	r8, Y+12	; 0x0c
 ca4:	9b 84       	ldd	r9, Y+11	; 0x0b
 ca6:	aa 84       	ldd	r10, Y+10	; 0x0a
 ca8:	b9 84       	ldd	r11, Y+9	; 0x09
 caa:	c8 84       	ldd	r12, Y+8	; 0x08
 cac:	df 80       	ldd	r13, Y+7	; 0x07
 cae:	ee 80       	ldd	r14, Y+6	; 0x06
 cb0:	fd 80       	ldd	r15, Y+5	; 0x05
 cb2:	0c 81       	ldd	r16, Y+4	; 0x04
 cb4:	1b 81       	ldd	r17, Y+3	; 0x03
 cb6:	aa 81       	ldd	r26, Y+2	; 0x02
 cb8:	b9 81       	ldd	r27, Y+1	; 0x01
 cba:	ce 0f       	add	r28, r30
 cbc:	d1 1d       	adc	r29, r1
 cbe:	0f b6       	in	r0, 0x3f	; 63
 cc0:	f8 94       	cli
 cc2:	de bf       	out	0x3e, r29	; 62
 cc4:	0f be       	out	0x3f, r0	; 63
 cc6:	cd bf       	out	0x3d, r28	; 61
 cc8:	ed 01       	movw	r28, r26
 cca:	08 95       	ret

00000ccc <_exit>:
 ccc:	f8 94       	cli

00000cce <__stop_program>:
 cce:	ff cf       	rjmp	.-2      	; 0xcce <__stop_program>
